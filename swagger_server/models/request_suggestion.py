# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.column import Column  # noqa: F401,E501
from swagger_server.models.data_input import DataInput  # noqa: F401,E501
from swagger_server import util


class RequestSuggestion(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, training_data: DataInput=None, input_columns: List[Column]=None, output_columns: List[Column]=None):  # noqa: E501
        """RequestSuggestion - a model defined in Swagger

        :param training_data: The training_data of this RequestSuggestion.  # noqa: E501
        :type training_data: DataInput
        :param input_columns: The input_columns of this RequestSuggestion.  # noqa: E501
        :type input_columns: List[Column]
        :param output_columns: The output_columns of this RequestSuggestion.  # noqa: E501
        :type output_columns: List[Column]
        """
        self.swagger_types = {
            'training_data': DataInput,
            'input_columns': List[Column],
            'output_columns': List[Column]
        }

        self.attribute_map = {
            'training_data': 'training_data',
            'input_columns': 'input_columns',
            'output_columns': 'output_columns'
        }

        self._training_data = training_data
        self._input_columns = input_columns
        self._output_columns = output_columns

    @classmethod
    def from_dict(cls, dikt) -> 'RequestSuggestion':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestSuggestion of this RequestSuggestion.  # noqa: E501
        :rtype: RequestSuggestion
        """
        return util.deserialize_model(dikt, cls)

    @property
    def training_data(self) -> DataInput:
        """Gets the training_data of this RequestSuggestion.


        :return: The training_data of this RequestSuggestion.
        :rtype: DataInput
        """
        return self._training_data

    @training_data.setter
    def training_data(self, training_data: DataInput):
        """Sets the training_data of this RequestSuggestion.


        :param training_data: The training_data of this RequestSuggestion.
        :type training_data: DataInput
        """

        self._training_data = training_data

    @property
    def input_columns(self) -> List[Column]:
        """Gets the input_columns of this RequestSuggestion.


        :return: The input_columns of this RequestSuggestion.
        :rtype: List[Column]
        """
        return self._input_columns

    @input_columns.setter
    def input_columns(self, input_columns: List[Column]):
        """Sets the input_columns of this RequestSuggestion.


        :param input_columns: The input_columns of this RequestSuggestion.
        :type input_columns: List[Column]
        """

        self._input_columns = input_columns

    @property
    def output_columns(self) -> List[Column]:
        """Gets the output_columns of this RequestSuggestion.


        :return: The output_columns of this RequestSuggestion.
        :rtype: List[Column]
        """
        return self._output_columns

    @output_columns.setter
    def output_columns(self, output_columns: List[Column]):
        """Sets the output_columns of this RequestSuggestion.


        :param output_columns: The output_columns of this RequestSuggestion.
        :type output_columns: List[Column]
        """

        self._output_columns = output_columns
