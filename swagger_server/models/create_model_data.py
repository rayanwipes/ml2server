# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.column import Column  # noqa: F401,E501
from swagger_server.models.data_input import DataInput  # noqa: F401,E501
from swagger_server import util


class CreateModelData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, refresh_token: str=None, job_id: str=None, training_data: DataInput=None, output_directory_path: str=None, input_columns: List[Column]=None, output_columns: List[Column]=None, parameters: object=None):  # noqa: E501
        """CreateModelData - a model defined in Swagger

        :param refresh_token: The refresh_token of this CreateModelData.  # noqa: E501
        :type refresh_token: str
        :param job_id: The job_id of this CreateModelData.  # noqa: E501
        :type job_id: str
        :param training_data: The training_data of this CreateModelData.  # noqa: E501
        :type training_data: DataInput
        :param output_directory_path: The output_directory_path of this CreateModelData.  # noqa: E501
        :type output_directory_path: str
        :param input_columns: The input_columns of this CreateModelData.  # noqa: E501
        :type input_columns: List[Column]
        :param output_columns: The output_columns of this CreateModelData.  # noqa: E501
        :type output_columns: List[Column]
        :param parameters: The parameters of this CreateModelData.  # noqa: E501
        :type parameters: object
        """
        self.swagger_types = {
            'refresh_token': str,
            'job_id': str,
            'training_data': DataInput,
            'output_directory_path': str,
            'input_columns': List[Column],
            'output_columns': List[Column],
            'parameters': object
        }

        self.attribute_map = {
            'refresh_token': 'refresh_token',
            'job_id': 'job_id',
            'training_data': 'training_data',
            'output_directory_path': 'output_directory_path',
            'input_columns': 'input_columns',
            'output_columns': 'output_columns',
            'parameters': 'parameters'
        }

        self._refresh_token = refresh_token
        self._job_id = job_id
        self._training_data = training_data
        self._output_directory_path = output_directory_path
        self._input_columns = input_columns
        self._output_columns = output_columns
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt) -> 'CreateModelData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateModelData of this CreateModelData.  # noqa: E501
        :rtype: CreateModelData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def refresh_token(self) -> str:
        """Gets the refresh_token of this CreateModelData.


        :return: The refresh_token of this CreateModelData.
        :rtype: str
        """
        return self._refresh_token

    @refresh_token.setter
    def refresh_token(self, refresh_token: str):
        """Sets the refresh_token of this CreateModelData.


        :param refresh_token: The refresh_token of this CreateModelData.
        :type refresh_token: str
        """

        self._refresh_token = refresh_token

    @property
    def job_id(self) -> str:
        """Gets the job_id of this CreateModelData.


        :return: The job_id of this CreateModelData.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id: str):
        """Sets the job_id of this CreateModelData.


        :param job_id: The job_id of this CreateModelData.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def training_data(self) -> DataInput:
        """Gets the training_data of this CreateModelData.


        :return: The training_data of this CreateModelData.
        :rtype: DataInput
        """
        return self._training_data

    @training_data.setter
    def training_data(self, training_data: DataInput):
        """Sets the training_data of this CreateModelData.


        :param training_data: The training_data of this CreateModelData.
        :type training_data: DataInput
        """

        self._training_data = training_data

    @property
    def output_directory_path(self) -> str:
        """Gets the output_directory_path of this CreateModelData.

        Filepath to the directory where the user wants output files to be saved.  # noqa: E501

        :return: The output_directory_path of this CreateModelData.
        :rtype: str
        """
        return self._output_directory_path

    @output_directory_path.setter
    def output_directory_path(self, output_directory_path: str):
        """Sets the output_directory_path of this CreateModelData.

        Filepath to the directory where the user wants output files to be saved.  # noqa: E501

        :param output_directory_path: The output_directory_path of this CreateModelData.
        :type output_directory_path: str
        """

        self._output_directory_path = output_directory_path

    @property
    def input_columns(self) -> List[Column]:
        """Gets the input_columns of this CreateModelData.


        :return: The input_columns of this CreateModelData.
        :rtype: List[Column]
        """
        return self._input_columns

    @input_columns.setter
    def input_columns(self, input_columns: List[Column]):
        """Sets the input_columns of this CreateModelData.


        :param input_columns: The input_columns of this CreateModelData.
        :type input_columns: List[Column]
        """

        self._input_columns = input_columns

    @property
    def output_columns(self) -> List[Column]:
        """Gets the output_columns of this CreateModelData.


        :return: The output_columns of this CreateModelData.
        :rtype: List[Column]
        """
        return self._output_columns

    @output_columns.setter
    def output_columns(self, output_columns: List[Column]):
        """Sets the output_columns of this CreateModelData.


        :param output_columns: The output_columns of this CreateModelData.
        :type output_columns: List[Column]
        """

        self._output_columns = output_columns

    @property
    def parameters(self) -> object:
        """Gets the parameters of this CreateModelData.

        An object of key value pairs where the key is the parameter id and the value is the parameter value. Parameters are as specified by the results of a /suggest or /jobs call.  # noqa: E501

        :return: The parameters of this CreateModelData.
        :rtype: object
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters: object):
        """Sets the parameters of this CreateModelData.

        An object of key value pairs where the key is the parameter id and the value is the parameter value. Parameters are as specified by the results of a /suggest or /jobs call.  # noqa: E501

        :param parameters: The parameters of this CreateModelData.
        :type parameters: object
        """

        self._parameters = parameters
